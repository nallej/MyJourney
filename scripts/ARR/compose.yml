---
# The full ARR stack
services:       
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    hostname: prowlarr
    volumes:
      - ${ARRPATH}Prowlarr/config:/config
      - ${ARRPATH}Prowlarr/backup:/data/Backup
      - ${ARRPATH}Downloads:/downloads
    ports: # Consider what port to use, 'com port':'fixed, app internal'
      - 9696:9696
    restart: unless-stopped
    env_file:
      - '.env'
  # ------------------------------------------------------
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    volumes:
      - ${ARRPATH}Sonarr/config:/config
      - ${ARRPATH}Sonarr/backup:/data/Backup
      - ${ARRPATH}Sonarr/tvshows:/data/tvshows
      - ${ARRPATH}Downloads:/downloads
    ports: # Consider what port to use, 'com port':'fixed, app internal'
      - 8989:8989
    restart: unless-stopped
    env_file:
      - '.env'
  # ------------------------------------------------------
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    volumes:
      - ${ARRPATH}Radarr/config:/config
      - ${ARRPATH}Radarr/movies:/data/movies
      - ${ARRPATH}Radarr/backup:/data/Backup
      - ${ARRPATH}Downloads:/downloads
    ports: # Consider what port to use, 'com port':'fixed, app internal'
      - 7878:7878
    restart: unless-stopped
    env_file:
      - '.env'
  # ------------------------------------------------------
  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    hostname: lidarr
    volumes:
      - ${ARRPATH}Lidarr/config:/config
      - ${ARRPATH}Lidarr/music:/data/musicfolder
      - ${ARRPATH}Downloads:/downloads
    ports: # Consider what port to use, 'com port':'fixed, app internal'
      - 8686:8686
    restart: unless-stopped
    env_file:
      - '.env'
  # ------------------------------------------------------
  readarr:
    image: linuxserver/readarr:develop
    container_name: readarr
    hostname: readarr
    volumes:
      - ${ARRPATH}Readarr/config:/config
      - ${ARRPATH}Readarr/books:/data/books
      - ${ARRPATH}Downloads:/downloads
    ports:
      - 8787:8787 # Consider what port to use, 'com port':'fixed, app internal'
    restart: unless-stopped
    env_file:
      - '.env'
  # ------------------------------------------------------
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - ${ARRPATH}Homarr/configs:/app/data/configs
      - ${ARRPATH}Homarr/icons:/app/public/icons
      - ${ARRPATH}Homarr/data:/data
    ports:
      - '7575:7575' # Consider what port to use, 'com port':'fixed, app internal'
    env_file:
      - '.env'
  # ------------------------------------------------------
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    ports: # Consider what port to use, 'com port':'fixed, app internal'
      - '8096:8096/tcp'   # Jellyfin web interface 
      - '7359:7359/udp'   # Network discovery
      - '1900:1900/udp'   # DLNA port
    volumes:
      - ${ARRPATH}Jellyfin/config:/config
      - ${ARRPATH}Radarr/movies:/data/Movies
      - ${ARRPATH}Sonarr/tvshows:/data/TVShows
      - ${ARRPATH}Lidarr/music:/data/Music
      - ${ARRPATH}Readarr/books:/data/Books
    env_file:
      - '.env'
    restart: unless-stopped
  # ------------------------------------------------------
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    hostname: qbittorrent
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    volumes:
      - ${ARRPATH}qbittorrent/config:/config
      - ${ARRPATH}Downloads:/downloads
    ports: # Consider what port to use, 'com port':'fixed, app internal'
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    environment:
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    healthcheck:
      start_period: 15s
    env_file:
      - '.env'
# ========================================================
